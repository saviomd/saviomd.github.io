{"version":3,"sources":["autotrack.js","node_modules/dom-utils/lib/matches.js"," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/arrayfromiterator] ","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/parents.js","lib/plugins/event-tracker.js","node_modules/dom-utils/lib/parse-url.js","lib/method-chain.js","lib/utilities.js","node_modules/dom-utils/lib/get-attributes.js","lib/provide.js","lib/constants.js","lib/usage.js","lib/plugins/clean-url-tracker.js","lib/plugins/impression-tracker.js","lib/event-emitter.js","lib/store.js"," [synthetic:es6/util/inherits] ","lib/session.js","lib/plugins/max-scroll-tracker.js","lib/plugins/media-query-tracker.js","lib/plugins/outbound-form-tracker.js","lib/plugins/outbound-link-tracker.js","lib/plugins/page-visibility-tracker.js","lib/plugins/social-widget-tracker.js","lib/plugins/url-change-tracker.js","_header.js"],"names":["g","$jscomp.defineProperty","Object","defineProperties","defineProperty","a","b","c","get","set","TypeError","Array","prototype","value","$jscomp.global","window","this","global","l","$jscomp.initSymbol","Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","ba","$jscomp.SYMBOL_PREFIX","m","iterator","configurable","writable","$jscomp.arrayIterator","$jscomp.initSymbolIterator","da","length","done","next","fa","call","n","push","proto","Element","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","nodeType","item","i","selector","nodes","parentNode","querySelectorAll","node","delegate","eventType","callback","listener","d","event","delegateTarget","opts","composed","composedPath","target","parentElements","concat","parents","list","parent","document","h","useCapture","ancestor","addEventListener","destroy","removeEventListener","DEFAULT_PORT","createElement","cache","parseUrl","url","location","href","charAt","port","HTTP_PORT","HTTPS_PORT","host","replace","hash","hostname","origin","protocol","pathname","search","instances","MethodChain","context","methodName","originalMethodReference","isTask","methodChain","boundMethodChain","wrappedMethod","this.wrappedMethod","arguments","apply","$jscomp.arrayFromIterable","args","add","x","methodOverride","getOrCreateMethodChain","rebindMethodChain","remove","y","index","indexOf","splice","qa","method","previousMethod","bind","filter","createFieldsObj","defaultFields","userFields","tracker","hitFilter","assign","originalBuildHitTask","buildHitTask","model","getAttributeFields","prefix","attributes","getAttributes","attrs","map","attr","name","attributeFields","keys","forEach","attribute","field","slice","match","p1","toUpperCase","debounce","fn","wait","timeout","e","clearTimeout","setTimeout","withTimeout","called","oa","j","queueMap","len","sources","key","source","hasOwnProperty","isObject","uuid","Math","random","toString","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","q","gaDevIds","DEV_ID","gaplugins","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","trackUsage","plugin","VERSION","usageHex","parseInt","toAdd","str","usageBin","substr","constructor","CleanUrlTracker","defaultOpts","queryDimension","stripQuery","queryDimensionIndex","trackerGetOverride","buildHitTaskOverride","MethodChain.add","xa","cleanUrlFields","fieldsObj","page","indexFilename","parts","split","join","trailingSlash","cleanedFieldsObj","stripNonWhitelistedQueryParams","searchString","isArray","queryParamsWhitelist","foundParams","kv","$jscomp.makeIterator","NULL_DIMENSION","urlFieldsFilter","returnValue","userCleanedFieldsObj","EventTracker","events","attributePrefix","handleEvents","delegates","ImpressionTracker","IntersectionObserver","MutationObserver","defaultOptions","rootMargin","handleDomMutations","handleIntersectionChanges","handleDomElementAdded","handleDomElementRemoved","mutationObserver","items","elementMap","thresholdMap","elements","observeElements","readyState","deriveDataFromElements","M","getItemFromElement","id","threshold","N","walkNodeTree","child","childNodes","trackFirstImpressionOnly","EventEmitter","registry_","K","f","originalMethod","MethodChain.remove","L","getAttribute","type","send","hitType","transport","za","ImpressionTracker.prototype","data","observer","getElementById","observe","body","childList","subtree","requestAnimationFrame","unobserveElements","itemsToKeep","itemsToRemove","some","itemToRemove","dataToKeep","dataToRemove","unobserve","disconnect","unobserveAllElements","?.prototype","mutations","mutation","removedEl","k","removedNodes","addedEl","addedNodes","records","record","intersectionRatio","intersectionRect","top","bottom","left","right","eventCategory","eventAction","eventLabel","nonInteraction","handleImpression","browserSupportsLocalStorage","isListening","Ba","ca","emit","getRegistry_","Store","defaults","key_","defaults_","cache_","getOrCreate","S","trackingId","namespace","AUTOTRACK_PREFIX","storageListener","isSupported_","Ea","localStorage","setItem","removeItem","err","Ga","clear","Store.isSupported_","store","oldData","parse","oldValue","newData","newValue","JSON","ha","getOwnPropertyDescriptor","$jscomp.inherits","R","getItem","stringify","Session","timeZone","Session.DEFAULT_TIMEOUT","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","Store.getOrCreate","defaultProps","hitTime","isExpired","Ia","getId","V","U","sessionData","oldHitTime","currentDate","Date","oldHitDate","MINUTES","datesAreDifferentInTimezone","format","sessionWillStart","sessionControl","sessionWillEnd","MaxScrollTracker","increaseThreshold","sessionTimeout","pagePath","getPagePath","handleScroll","trackerSetOverride","session","Session.getOrCreate","listenForMaxScrollChanges","Ka","getMaxScrollPercentageForCurrentPage","Ja","W","html","documentElement","scrollPercentage","min","max","round","pageYOffset","offsetHeight","scrollHeight","innerHeight","sessionId","maxScrollPercentage","stopListeningForMaxScrollChanges","increaseAmount","setMaxScrollPercentageForCurrentPage","eventValue","String","sendMaxScrollEvent","maxScrollMetricIndex","o","lastPagePath","mediaMap","MediaQueryTracker","processMediaQueries","matchMedia","changeTemplate","changeTimeout","definitions","changeListeners","definition","dimensionIndex","mediaName","getMatchName","addChangeListeners","mql","getMediaList","media","handleChanges","addListener","Pa","OutboundFormTracker","formSelector","shouldTrackOutboundForm","handleFormSubmits","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","Ma","removeListener","X","form","action","navigator","sendBeacon","preventDefault","hitCallback","submit","parseUrlFn","Y","link","metaKey","ctrlKey","shiftKey","altKey","which","clickHandler","defaultPrevented","oldHitCallback","PAGE_ID","PageVisibilityTracker","on","visibilityState","visibleThreshold","sendInitialPageview","lastPageState","visibleThresholdTimeout_","isInitialPageviewSent_","handleChange","handleWindowUnload","handleExternalStoreSet","externalSet","processQueue","ref","queue","ref.send","deferUntilPluginsLoaded","VISIBLE","sendPageview","isPageLoad","time","state","pageId","pageLoadsMetricIndex","sendPageLoad","sendPageVisibilityEvent","Va","lastStoredChange","delta","deltaInSeconds","SECONDS$1","queueTime","visibleMetricIndex","Ta","ea","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","UrlChangeTracker","history","pushState","shouldTrackUrlChange","trackReplaceState","path","pushStateOverride","replaceStateOverride","handlePopState","Za","handleUrlChange","historyDidUpdate","oldPath","newPath","title","Sa","PageVisibilityTracker.prototype","getAndValidateChangeData","HIDDEN","change","PageVisibilityTracker_prototype$trackerSetOverride","fields","Wa","SocialWidgetTracker.prototype","FB","Event","subscribe","addFacebookEventHandlers","twttr","ready","region","socialNetwork","socialAction","socialTarget","screen_name","unsubscribe","removeFacebookEventHandlers","removeTwitterEventHandlers","unbind","Ya","UrlChangeTracker.prototype","saviomd","header","querySelector","classList","toggle","navLink","scrollIntoView"],"mappings":"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","file":"saviomd.min.js","sourcesContent":["(function(){var g,aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(c.get||c.set)throw new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},k=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function l(){l=function(){};k.Symbol||(k.Symbol=ba)}var ca=0;function ba(a){return\"jscomp_symbol_\"+(a||\"\")+ca++}\nfunction m(){l();var a=k.Symbol.iterator;a||(a=k.Symbol.iterator=k.Symbol(\"iterator\"));\"function\"!=typeof Array.prototype[a]&&aa(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return da(this)}});m=function(){}}function da(a){var b=0;return ea(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})}function ea(a){m();a={next:a};a[k.Symbol.iterator]=function(){return this};return a}function fa(a){m();l();m();var b=a[Symbol.iterator];return b?b.call(a):da(a)}\nfunction n(a){if(!(a instanceof Array)){a=fa(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}function ha(a,b){function c(){}c.prototype=b.prototype;a.ha=b.prototype;a.prototype=new c;a.prototype.constructor=a;for(var d in b)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(b,d);e&&Object.defineProperty(a,d,e)}else a[d]=b[d]}var p=window.Element.prototype,ia=p.matches||p.matchesSelector||p.webkitMatchesSelector||p.mozMatchesSelector||p.msMatchesSelector||p.oMatchesSelector;\nfunction ja(a,b){if(a&&1==a.nodeType&&b){if(\"string\"==typeof b||1==b.nodeType)return a==b||ka(a,b);if(\"length\"in b)for(var c=0,d;d=b[c];c++)if(a==d||ka(a,d))return!0}return!1}function ka(a,b){if(\"string\"!=typeof b)return!1;if(ia)return ia.call(a,b);b=a.parentNode.querySelectorAll(b);for(var c=0,d;d=b[c];c++)if(d==a)return!0;return!1}function la(a){for(var b=[];a&&a.parentNode&&1==a.parentNode.nodeType;)a=a.parentNode,b.push(a);return b}\nfunction q(a,b,c){function d(a){var d;if(h.composed&&\"function\"==typeof a.composedPath)for(var e=a.composedPath(),f=0,F;F=e[f];f++)1==F.nodeType&&ja(F,b)&&(d=F);else a:{if((d=a.target)&&1==d.nodeType&&b)for(d=[d].concat(la(d)),e=0;f=d[e];e++)if(ja(f,b)){d=f;break a}d=void 0}d&&c.call(d,a,d)}var e=document,h={composed:!0,S:!0},h=void 0===h?{}:h;e.addEventListener(a,d,h.S);return{j:function(){e.removeEventListener(a,d,h.S)}}}\nfunction ma(a){var b={};if(!a||1!=a.nodeType)return b;a=a.attributes;if(!a.length)return{};for(var c=0,d;d=a[c];c++)b[d.name]=d.value;return b}var na=/:(80|443)$/,r=document.createElement(\"a\"),t={};\nfunction u(a){a=a&&\".\"!=a?a:location.href;if(t[a])return t[a];r.href=a;if(\".\"==a.charAt(0)||\"/\"==a.charAt(0))return u(r.href);var b=\"80\"==r.port||\"443\"==r.port?\"\":r.port,b=\"0\"==b?\"\":b,c=r.host.replace(na,\"\");return t[a]={hash:r.hash,host:c,hostname:r.hostname,href:r.href,origin:r.origin?r.origin:r.protocol+\"//\"+c,pathname:\"/\"==r.pathname.charAt(0)?r.pathname:\"/\"+r.pathname,port:b,protocol:r.protocol,search:r.search}}var w=[];\nfunction oa(a,b){var c=this;this.context=a;this.P=b;this.f=(this.c=/Task$/.test(b))?a.get(b):a[b];this.b=[];this.a=[];this.g=function(a){for(var b=[],d=0;d<arguments.length;++d)b[d-0]=arguments[d];return c.a[c.a.length-1].apply(null,[].concat(n(b)))};this.c?a.set(b,this.g):a[b]=this.g}function x(a,b,c){a=pa(a,b);a.b.push(c);qa(a)}function y(a,b,c){a=pa(a,b);c=a.b.indexOf(c);-1<c&&(a.b.splice(c,1),0<a.b.length?qa(a):a.j())}\nfunction qa(a){a.a=[];for(var b,c=0;b=a.b[c];c++){var d=a.a[c-1]||a.f.bind(a.context);a.a.push(b(d))}}oa.prototype.j=function(){var a=w.indexOf(this);-1<a&&(w.splice(a,1),this.c?this.context.set(this.P,this.f):this.context[this.P]=this.f)};function pa(a,b){var c=w.filter(function(c){return c.context==a&&c.P==b})[0];c||(c=new oa(a,b),w.push(c));return c}\nfunction z(a,b,c,d,e,h){if(\"function\"==typeof d){var f=c.get(\"buildHitTask\");return{buildHitTask:function(c){c.set(a,null,!0);c.set(b,null,!0);d(c,e,h);f(c)}}}return A({},a,b)}function B(a,b){var c=ma(a),d={};Object.keys(c).forEach(function(a){if(!a.indexOf(b)&&a!=b+\"on\"){var e=c[a];\"true\"==e&&(e=!0);\"false\"==e&&(e=!1);a=ra(a.slice(b.length));d[a]=e}});return d}\nfunction sa(a){\"loading\"==document.readyState?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):a()}function ta(a,b){var c;return function(d){for(var e=[],h=0;h<arguments.length;++h)e[h-0]=arguments[h];clearTimeout(c);c=setTimeout(function(){return a.apply(null,[].concat(n(e)))},b)}}function ua(a){function b(){c||(c=!0,a())}var c=!1;setTimeout(b,2E3);return b}var C={};\nfunction va(a,b){function c(){clearTimeout(e.timeout);e.send&&y(a,\"send\",e.send);delete C[d];e.R.forEach(function(a){return a()})}var d=a.get(\"trackingId\"),e=C[d]=C[d]||{};clearTimeout(e.timeout);e.timeout=setTimeout(c,0);e.R=e.R||[];e.R.push(b);e.send||(e.send=function(a){return function(b){for(var d=[],e=0;e<arguments.length;++e)d[e-0]=arguments[e];c();a.apply(null,[].concat(n(d)))}},x(a,\"send\",e.send))}\nvar A=Object.assign||function(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];for(var d=0,e=c.length;d<e;d++){var h=Object(c[d]),f;for(f in h)Object.prototype.hasOwnProperty.call(h,f)&&(a[f]=h[f])}return a};function ra(a){return a.replace(/[\\-\\_]+(\\w?)/g,function(a,c){return c.toUpperCase()})}function D(a){return\"object\"==typeof a&&null!==a}var E=function wa(b){return b?(b^16*Math.random()>>b/4).toString(16):\"10000000-1000-4000-8000-100000000000\".replace(/[018]/g,wa)};\nfunction G(a,b){var c=window.GoogleAnalyticsObject||\"ga\";window[c]=window[c]||function(a){for(var b=[],d=0;d<arguments.length;++d)b[d-0]=arguments[d];(window[c].q=window[c].q||[]).push(b)};window.gaDevIds=window.gaDevIds||[];0>window.gaDevIds.indexOf(\"i5iSjo\")&&window.gaDevIds.push(\"i5iSjo\");window[c](\"provide\",a,b);window.gaplugins=window.gaplugins||{};window.gaplugins[a.charAt(0).toUpperCase()+a.slice(1)]=b}var H={T:1,U:2,V:3,X:4,Y:5,Z:6,$:7,aa:8,ba:9,W:10},I=Object.keys(H).length;\nfunction J(a,b){a.set(\"\\x26_av\",\"2.4.1\");var c=a.get(\"\\x26_au\"),c=parseInt(c||\"0\",16).toString(2);if(c.length<I)for(var d=I-c.length;d;)c=\"0\"+c,d--;b=I-b;c=c.substr(0,b)+1+c.substr(b+1);a.set(\"\\x26_au\",parseInt(c||\"0\",2).toString(16))}function K(a,b){J(a,H.T);this.a=A({},b);this.g=a;this.b=this.a.stripQuery&&this.a.queryDimensionIndex?\"dimension\"+this.a.queryDimensionIndex:null;this.f=this.f.bind(this);this.c=this.c.bind(this);x(a,\"get\",this.f);x(a,\"buildHitTask\",this.c)}\nK.prototype.f=function(a){var b=this;return function(c){if(\"page\"==c||c==b.b){var d={location:a(\"location\"),page:a(\"page\")};return xa(b,d)[c]}return a(c)}};K.prototype.c=function(a){var b=this;return function(c){var d=xa(b,{location:c.get(\"location\"),page:c.get(\"page\")});c.set(d,null,!0);a(c)}};\nfunction xa(a,b){var c=u(b.page||b.location),d=c.pathname;if(a.a.indexFilename){var e=d.split(\"/\");a.a.indexFilename==e[e.length-1]&&(e[e.length-1]=\"\",d=e.join(\"/\"))}\"remove\"==a.a.trailingSlash?d=d.replace(/\\/+$/,\"\"):\"add\"==a.a.trailingSlash&&(/\\.\\w+$/.test(d)||\"/\"==d.substr(-1)||(d+=\"/\"));d={page:d+(a.a.stripQuery?ya(a,c.search):c.search)};b.location&&(d.location=b.location);a.b&&(d[a.b]=c.search.slice(1)||\"(not set)\");return\"function\"==typeof a.a.urlFieldsFilter?(b=a.a.urlFieldsFilter(d,u),c={page:b.page,\nlocation:b.location},a.b&&(c[a.b]=b[a.b]),c):d}function ya(a,b){if(Array.isArray(a.a.queryParamsWhitelist)){var c=[];b.slice(1).split(\"\\x26\").forEach(function(b){var d=fa(b.split(\"\\x3d\"));b=d.next().value;d=d.next().value;-1<a.a.queryParamsWhitelist.indexOf(b)&&d&&c.push([b,d])});return c.length?\"?\"+c.map(function(a){return a.join(\"\\x3d\")}).join(\"\\x26\"):\"\"}return\"\"}K.prototype.remove=function(){y(this.g,\"get\",this.f);y(this.g,\"buildHitTask\",this.c)};G(\"cleanUrlTracker\",K);\nfunction L(a,b){var c=this;J(a,H.U);if(window.addEventListener){this.a=A({events:[\"click\"],fieldsObj:{},attributePrefix:\"ga-\"},b);this.f=a;this.c=this.c.bind(this);var d=\"[\"+this.a.attributePrefix+\"on]\";this.b={};this.a.events.forEach(function(a){c.b[a]=q(a,d,c.c)})}}\nL.prototype.c=function(a,b){var c=this.a.attributePrefix;if(!(0>b.getAttribute(c+\"on\").split(/\\s*,\\s*/).indexOf(a.type))){var c=B(b,c),d=A({},this.a.fieldsObj,c);this.f.send(c.hitType||\"event\",z({transport:\"beacon\"},d,this.f,this.a.hitFilter,b,a))}};L.prototype.remove=function(){var a=this;Object.keys(this.b).forEach(function(b){a.b[b].j()})};G(\"eventTracker\",L);\nfunction za(a,b){var c=this;J(a,H.V);window.IntersectionObserver&&window.MutationObserver&&(this.a=A({rootMargin:\"0px\",fieldsObj:{},attributePrefix:\"ga-\"},b),this.c=a,this.M=this.M.bind(this),this.O=this.O.bind(this),this.K=this.K.bind(this),this.L=this.L.bind(this),this.b=null,this.items=[],this.i={},this.h={},sa(function(){c.a.elements&&c.observeElements(c.a.elements)}))}g=za.prototype;\ng.observeElements=function(a){var b=this;a=M(this,a);this.items=this.items.concat(a.items);this.i=A({},a.i,this.i);this.h=A({},a.h,this.h);a.items.forEach(function(a){var c=b.h[a.threshold]=b.h[a.threshold]||new IntersectionObserver(b.O,{rootMargin:b.a.rootMargin,threshold:[+a.threshold]});(a=b.i[a.id]||(b.i[a.id]=document.getElementById(a.id)))&&c.observe(a)});this.b||(this.b=new MutationObserver(this.M),this.b.observe(document.body,{childList:!0,subtree:!0}));requestAnimationFrame(function(){})};\ng.unobserveElements=function(a){var b=[],c=[];this.items.forEach(function(d){a.some(function(a){a=Aa(a);return a.id===d.id&&a.threshold===d.threshold&&a.trackFirstImpressionOnly===d.trackFirstImpressionOnly})?c.push(d):b.push(d)});if(b.length){var d=M(this,b),e=M(this,c);this.items=d.items;this.i=d.i;this.h=d.h;c.forEach(function(a){if(!d.i[a.id]){var b=e.h[a.threshold],c=e.i[a.id];c&&b.unobserve(c);d.h[a.threshold]||e.h[a.threshold].disconnect()}})}else this.unobserveAllElements()};\ng.unobserveAllElements=function(){var a=this;Object.keys(this.h).forEach(function(b){a.h[b].disconnect()});this.b.disconnect();this.b=null;this.items=[];this.i={};this.h={}};function M(a,b){var c=[],d={},e={};b.length&&b.forEach(function(b){b=Aa(b);c.push(b);e[b.id]=a.i[b.id]||null;d[b.threshold]=a.h[b.threshold]||null});return{items:c,i:e,h:d}}g.M=function(a){for(var b=0,c;c=a[b];b++){for(var d=0,e;e=c.removedNodes[d];d++)N(this,e,this.L);for(d=0;e=c.addedNodes[d];d++)N(this,e,this.K)}};\nfunction N(a,b,c){1==b.nodeType&&b.id in a.i&&c(b.id);for(var d=0,e;e=b.childNodes[d];d++)N(a,e,c)}\ng.O=function(a){for(var b=[],c=0,d;d=a[c];c++)for(var e=0,h;h=this.items[e];e++){var f;if(f=d.target.id===h.id)(f=h.threshold)?f=d.intersectionRatio>=f:(f=d.intersectionRect,f=0<f.top||0<f.bottom||0<f.left||0<f.right);if(f){var v=h.id;f=document.getElementById(v);var v={transport:\"beacon\",eventCategory:\"Viewport\",eventAction:\"impression\",eventLabel:v,nonInteraction:!0},Na=A({},this.a.fieldsObj,B(f,this.a.attributePrefix));this.c.send(\"event\",z(v,Na,this.c,this.a.hitFilter,f));h.trackFirstImpressionOnly&&\nb.push(h)}}b.length&&this.unobserveElements(b)};g.K=function(a){var b=this,c=this.i[a]=document.getElementById(a);this.items.forEach(function(d){a==d.id&&b.h[d.threshold].observe(c)})};g.L=function(a){var b=this,c=this.i[a];this.items.forEach(function(d){a==d.id&&b.h[d.threshold].unobserve(c)});this.i[a]=null};g.remove=function(){this.unobserveAllElements()};G(\"impressionTracker\",za);function Aa(a){\"string\"==typeof a&&(a={id:a});return A({threshold:0,trackFirstImpressionOnly:!0},a)}\nfunction Ba(){this.a={}}function Ca(a,b){(a.a.externalSet=a.a.externalSet||[]).push(b)}Ba.prototype.ca=function(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];(this.a[a]=this.a[a]||[]).forEach(function(a){return a.apply(null,[].concat(n(c)))})};var O={},P=!1,Q;function R(a,b){b=void 0===b?{}:b;this.a={};this.b=a;this.w=b;this.l=null}ha(R,Ba);function S(a,b,c){a=[\"autotrack\",a,b].join(\":\");O[a]||(O[a]=new R(a,c),P||(window.addEventListener(\"storage\",Da),P=!0));return O[a]}\nfunction Ea(){if(null!=Q)return Q;try{window.localStorage.setItem(\"autotrack\",\"autotrack\"),window.localStorage.removeItem(\"autotrack\"),Q=!0}catch(a){Q=!1}return Q}R.prototype.get=function(){if(this.l)return this.l;if(Ea())try{this.l=Fa(window.localStorage.getItem(this.b))}catch(a){}return this.l=A({},this.w,this.l)};R.prototype.set=function(a){this.l=A({},this.w,this.l,a);if(Ea())try{var b=JSON.stringify(this.l);window.localStorage.setItem(this.b,b)}catch(c){}};\nfunction Ga(a){a.l={};if(Ea())try{window.localStorage.removeItem(a.b)}catch(b){}}R.prototype.j=function(){delete O[this.b];Object.keys(O).length||(window.removeEventListener(\"storage\",Da),P=!1)};function Da(a){var b=O[a.key];if(b){var c=A({},b.w,Fa(a.oldValue));a=A({},b.w,Fa(a.newValue));b.l=a;b.ca(\"externalSet\",a,c)}}function Fa(a){var b={};if(a)try{b=JSON.parse(a)}catch(c){}return b}var T={};\nfunction U(a,b,c){this.f=a;this.timeout=b||Ha;this.timeZone=c;this.b=this.b.bind(this);x(a,\"sendHitTask\",this.b);try{this.c=new Intl.DateTimeFormat(\"en-US\",{timeZone:this.timeZone})}catch(d){}this.a=S(a.get(\"trackingId\"),\"session\",{hitTime:0,isExpired:!1});this.a.get().id||this.a.set({id:E()})}function Ia(a,b,c){var d=a.get(\"trackingId\");return T[d]?T[d]:T[d]=new U(a,b,c)}function V(a){return a.a.get().id}\nU.prototype.isExpired=function(a){a=void 0===a?V(this):a;if(a!=V(this))return!0;a=this.a.get();if(a.isExpired)return!0;var b=a.hitTime;return b&&(a=new Date,b=new Date(b),a-b>6E4*this.timeout||this.c&&this.c.format(a)!=this.c.format(b))?!0:!1};U.prototype.b=function(a){var b=this;return function(c){a(c);var d=c.get(\"sessionControl\");c=\"start\"==d||b.isExpired();var d=\"end\"==d,e=b.a.get();e.hitTime=+new Date;c&&(e.isExpired=!1,e.id=E());d&&(e.isExpired=!0);b.a.set(e)}};\nU.prototype.j=function(){y(this.f,\"sendHitTask\",this.b);this.a.j();delete T[this.f.get(\"trackingId\")]};var Ha=30;function W(a,b){J(a,H.W);window.addEventListener&&(this.b=A({increaseThreshold:20,sessionTimeout:Ha,fieldsObj:{}},b),this.f=a,this.c=Ja(this),this.g=ta(this.g.bind(this),500),this.o=this.o.bind(this),this.a=S(a.get(\"trackingId\"),\"plugins/max-scroll-tracker\"),this.m=Ia(a,this.b.sessionTimeout,this.b.timeZone),x(a,\"set\",this.o),Ka(this))}\nfunction Ka(a){100>(a.a.get()[a.c]||0)&&window.addEventListener(\"scroll\",a.g)}\nW.prototype.g=function(){var a=document.documentElement,b=document.body,a=Math.min(100,Math.max(0,Math.round(window.pageYOffset/(Math.max(a.offsetHeight,a.scrollHeight,b.offsetHeight,b.scrollHeight)-window.innerHeight)*100))),b=V(this.m);b!=this.a.get().sessionId&&(Ga(this.a),this.a.set({sessionId:b}));if(this.m.isExpired(this.a.get().sessionId))Ga(this.a);else if(b=this.a.get()[this.c]||0,a>b&&(100!=a&&100!=b||window.removeEventListener(\"scroll\",this.g),b=a-b,100==a||b>=this.b.increaseThreshold)){var c=\n{};this.a.set((c[this.c]=a,c.sessionId=V(this.m),c));a={transport:\"beacon\",eventCategory:\"Max Scroll\",eventAction:\"increase\",eventValue:b,eventLabel:String(a),nonInteraction:!0};this.b.maxScrollMetricIndex&&(a[\"metric\"+this.b.maxScrollMetricIndex]=b);this.f.send(\"event\",z(a,this.b.fieldsObj,this.f,this.b.hitFilter))}};W.prototype.o=function(a){var b=this;return function(c,d){a(c,d);var e={};(D(c)?c:(e[c]=d,e)).page&&(c=b.c,b.c=Ja(b),b.c!=c&&Ka(b))}};\nfunction Ja(a){a=u(a.f.get(\"page\")||a.f.get(\"location\"));return a.pathname+a.search}W.prototype.remove=function(){this.m.j();window.removeEventListener(\"scroll\",this.g);y(this.f,\"set\",this.o)};G(\"maxScrollTracker\",W);var La={};function Ma(a,b){J(a,H.X);window.matchMedia&&(this.a=A({changeTemplate:this.changeTemplate,changeTimeout:1E3,fieldsObj:{}},b),D(this.a.definitions)&&(b=this.a.definitions,this.a.definitions=Array.isArray(b)?b:[b],this.b=a,this.c=[],Oa(this)))}\nfunction Oa(a){a.a.definitions.forEach(function(b){if(b.name&&b.dimensionIndex){var c=Pa(b);a.b.set(\"dimension\"+b.dimensionIndex,c);Qa(a,b)}})}function Pa(a){var b;a.items.forEach(function(a){Ra(a.media).matches&&(b=a)});return b?b.name:\"(not set)\"}\nfunction Qa(a,b){b.items.forEach(function(c){c=Ra(c.media);var d=ta(function(){var c=Pa(b),d=a.b.get(\"dimension\"+b.dimensionIndex);c!==d&&(a.b.set(\"dimension\"+b.dimensionIndex,c),c={transport:\"beacon\",eventCategory:b.name,eventAction:\"change\",eventLabel:a.a.changeTemplate(d,c),nonInteraction:!0},a.b.send(\"event\",z(c,a.a.fieldsObj,a.b,a.a.hitFilter)))},a.a.changeTimeout);c.addListener(d);a.c.push({fa:c,da:d})})}Ma.prototype.remove=function(){for(var a=0,b;b=this.c[a];a++)b.fa.removeListener(b.da)};\nMa.prototype.changeTemplate=function(a,b){return a+\" \\x3d\\x3e \"+b};G(\"mediaQueryTracker\",Ma);function Ra(a){return La[a]||(La[a]=window.matchMedia(a))}function X(a,b){J(a,H.Y);window.addEventListener&&(this.a=A({formSelector:\"form\",shouldTrackOutboundForm:this.shouldTrackOutboundForm,fieldsObj:{},attributePrefix:\"ga-\"},b),this.b=a,this.c=q(\"submit\",this.a.formSelector,this.f.bind(this)))}\nX.prototype.f=function(a,b){var c={transport:\"beacon\",eventCategory:\"Outbound Form\",eventAction:\"submit\",eventLabel:u(b.action).href};if(this.a.shouldTrackOutboundForm(b,u)){navigator.sendBeacon||(a.preventDefault(),c.hitCallback=ua(function(){b.submit()}));var d=A({},this.a.fieldsObj,B(b,this.a.attributePrefix));this.b.send(\"event\",z(c,d,this.b,this.a.hitFilter,b,a))}};\nX.prototype.shouldTrackOutboundForm=function(a,b){a=b(a.action);return a.hostname!=location.hostname&&\"http\"==a.protocol.slice(0,4)};X.prototype.remove=function(){this.c.j()};G(\"outboundFormTracker\",X);\nfunction Y(a,b){var c=this;J(a,H.Z);window.addEventListener&&(this.a=A({events:[\"click\"],linkSelector:\"a, area\",shouldTrackOutboundLink:this.shouldTrackOutboundLink,fieldsObj:{},attributePrefix:\"ga-\"},b),this.c=a,this.f=this.f.bind(this),this.b={},this.a.events.forEach(function(a){c.b[a]=q(a,c.a.linkSelector,c.f)}))}\nY.prototype.f=function(a,b){var c=this;if(this.a.shouldTrackOutboundLink(b,u)){var d=b.getAttribute(\"href\")||b.getAttribute(\"xlink:href\"),e=u(d),e={transport:\"beacon\",eventCategory:\"Outbound Link\",eventAction:a.type,eventLabel:e.href},h=A({},this.a.fieldsObj,B(b,this.a.attributePrefix)),f=z(e,h,this.c,this.a.hitFilter,b,a);if(navigator.sendBeacon||\"click\"!=a.type||\"_blank\"==b.target||a.metaKey||a.ctrlKey||a.shiftKey||a.altKey||1<a.which)this.c.send(\"event\",f);else{var v=function(){window.removeEventListener(\"click\",\nv);if(!a.defaultPrevented){a.preventDefault();var b=f.hitCallback;f.hitCallback=ua(function(){\"function\"==typeof b&&b();location.href=d})}c.c.send(\"event\",f)};window.addEventListener(\"click\",v)}}};Y.prototype.shouldTrackOutboundLink=function(a,b){a=a.getAttribute(\"href\")||a.getAttribute(\"xlink:href\");b=b(a);return b.hostname!=location.hostname&&\"http\"==b.protocol.slice(0,4)};Y.prototype.remove=function(){var a=this;Object.keys(this.b).forEach(function(b){a.b[b].j()})};G(\"outboundLinkTracker\",Y);\nvar Z=E();\nfunction Sa(a,b){var c=this;J(a,H.$);document.visibilityState&&(this.a=A({sessionTimeout:Ha,visibleThreshold:5E3,sendInitialPageview:!1,fieldsObj:{}},b),this.b=a,this.g=document.visibilityState,this.m=null,this.o=!1,this.v=this.v.bind(this),this.s=this.s.bind(this),this.G=this.G.bind(this),this.N=this.N.bind(this),this.c=S(a.get(\"trackingId\"),\"plugins/page-visibility-tracker\"),Ca(this.c,this.N),this.f=Ia(a,this.a.sessionTimeout,this.a.timeZone),x(a,\"set\",this.v),window.addEventListener(\"unload\",this.G),\ndocument.addEventListener(\"visibilitychange\",this.s),va(this.b,function(){if(\"visible\"==document.visibilityState)c.a.sendInitialPageview&&(Ta(c,{ea:!0}),c.o=!0),c.c.set({time:+new Date,state:\"visible\",pageId:Z,sessionId:V(c.f)});else if(c.a.sendInitialPageview&&c.a.pageLoadsMetricIndex){var a={},a=(a.transport=\"beacon\",a.eventCategory=\"Page Visibility\",a.eventAction=\"page load\",a.eventLabel=\"(not set)\",a[\"metric\"+c.a.pageLoadsMetricIndex]=1,a.nonInteraction=!0,a);c.b.send(\"event\",z(a,c.a.fieldsObj,\nc.b,c.a.hitFilter))}}))}g=Sa.prototype;\ng.s=function(){var a=this;if(\"visible\"==document.visibilityState||\"hidden\"==document.visibilityState){var b=Ua(this),c={time:+new Date,state:document.visibilityState,pageId:Z,sessionId:V(this.f)};\"visible\"==document.visibilityState&&this.a.sendInitialPageview&&!this.o&&(Ta(this),this.o=!0);\"hidden\"==document.visibilityState&&this.m&&clearTimeout(this.m);this.f.isExpired(b.sessionId)?(Ga(this.c),\"hidden\"==this.g&&\"visible\"==document.visibilityState&&(clearTimeout(this.m),this.m=setTimeout(function(){a.c.set(c);\nTa(a,{hitTime:c.time})},this.a.visibleThreshold))):(b.pageId==Z&&\"visible\"==b.state&&Va(this,b),this.c.set(c));this.g=document.visibilityState}};function Ua(a){var b=a.c.get();\"visible\"==a.g&&\"hidden\"==b.state&&b.pageId!=Z&&(b.state=\"visible\",b.pageId=Z,a.c.set(b));return b}\nfunction Va(a,b,c){c=(c?c:{}).hitTime;var d={hitTime:c},d=(d?d:{}).hitTime;(b=b.time?(d||+new Date)-b.time:0)&&b>=a.a.visibleThreshold&&(b=Math.round(b/1E3),d={transport:\"beacon\",nonInteraction:!0,eventCategory:\"Page Visibility\",eventAction:\"track\",eventValue:b,eventLabel:\"(not set)\"},c&&(d.queueTime=+new Date-c),a.a.visibleMetricIndex&&(d[\"metric\"+a.a.visibleMetricIndex]=b),a.b.send(\"event\",z(d,a.a.fieldsObj,a.b,a.a.hitFilter)))}\nfunction Ta(a,b){var c=b?b:{};b=c.hitTime;var c=c.ea,d={transport:\"beacon\"};b&&(d.queueTime=+new Date-b);c&&a.a.pageLoadsMetricIndex&&(d[\"metric\"+a.a.pageLoadsMetricIndex]=1);a.b.send(\"pageview\",z(d,a.a.fieldsObj,a.b,a.a.hitFilter))}g.v=function(a){var b=this;return function(c,d){var e={},e=D(c)?c:(e[c]=d,e);e.page&&e.page!==b.b.get(\"page\")&&\"visible\"==b.g&&b.s();a(c,d)}};g.N=function(a,b){a.time!=b.time&&(b.pageId!=Z||\"visible\"!=b.state||this.f.isExpired(b.sessionId)||Va(this,b,{hitTime:a.time}))};\ng.G=function(){\"hidden\"!=this.g&&this.s()};g.remove=function(){this.c.j();this.f.j();y(this.b,\"set\",this.v);window.removeEventListener(\"unload\",this.G);document.removeEventListener(\"visibilitychange\",this.s)};G(\"pageVisibilityTracker\",Sa);\nfunction Wa(a,b){J(a,H.aa);window.addEventListener&&(this.a=A({fieldsObj:{},hitFilter:null},b),this.b=a,this.u=this.u.bind(this),this.J=this.J.bind(this),this.D=this.D.bind(this),this.A=this.A.bind(this),this.B=this.B.bind(this),this.F=this.F.bind(this),\"complete\"!=document.readyState?window.addEventListener(\"load\",this.u):this.u())}g=Wa.prototype;\ng.u=function(){if(window.FB)try{window.FB.Event.subscribe(\"edge.create\",this.B),window.FB.Event.subscribe(\"edge.remove\",this.F)}catch(a){}window.twttr&&this.J()};g.J=function(){var a=this;try{window.twttr.ready(function(){window.twttr.events.bind(\"tweet\",a.D);window.twttr.events.bind(\"follow\",a.A)})}catch(b){}};function Xa(a){try{window.twttr.ready(function(){window.twttr.events.unbind(\"tweet\",a.D);window.twttr.events.unbind(\"follow\",a.A)})}catch(b){}}\ng.D=function(a){if(\"tweet\"==a.region){var b={transport:\"beacon\",socialNetwork:\"Twitter\",socialAction:\"tweet\",socialTarget:a.data.url||a.target.getAttribute(\"data-url\")||location.href};this.b.send(\"social\",z(b,this.a.fieldsObj,this.b,this.a.hitFilter,a.target,a))}};\ng.A=function(a){if(\"follow\"==a.region){var b={transport:\"beacon\",socialNetwork:\"Twitter\",socialAction:\"follow\",socialTarget:a.data.screen_name||a.target.getAttribute(\"data-screen-name\")};this.b.send(\"social\",z(b,this.a.fieldsObj,this.b,this.a.hitFilter,a.target,a))}};g.B=function(a){this.b.send(\"social\",z({transport:\"beacon\",socialNetwork:\"Facebook\",socialAction:\"like\",socialTarget:a},this.a.fieldsObj,this.b,this.a.hitFilter))};\ng.F=function(a){this.b.send(\"social\",z({transport:\"beacon\",socialNetwork:\"Facebook\",socialAction:\"unlike\",socialTarget:a},this.a.fieldsObj,this.b,this.a.hitFilter))};g.remove=function(){window.removeEventListener(\"load\",this.u);try{window.FB.Event.unsubscribe(\"edge.create\",this.B),window.FB.Event.unsubscribe(\"edge.remove\",this.F)}catch(a){}Xa(this)};G(\"socialWidgetTracker\",Wa);\nfunction Ya(a,b){J(a,H.ba);history.pushState&&window.addEventListener&&(this.a=A({shouldTrackUrlChange:this.shouldTrackUrlChange,trackReplaceState:!1,fieldsObj:{},hitFilter:null},b),this.b=a,this.c=location.pathname+location.search,this.H=this.H.bind(this),this.I=this.I.bind(this),this.C=this.C.bind(this),x(history,\"pushState\",this.H),x(history,\"replaceState\",this.I),window.addEventListener(\"popstate\",this.C))}g=Ya.prototype;\ng.H=function(a){var b=this;return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e-0]=arguments[e];a.apply(null,[].concat(n(d)));Za(b,!0)}};g.I=function(a){var b=this;return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e-0]=arguments[e];a.apply(null,[].concat(n(d)));Za(b,!1)}};g.C=function(){Za(this,!0)};\nfunction Za(a,b){setTimeout(function(){var c=a.c,d=location.pathname+location.search;c!=d&&a.a.shouldTrackUrlChange.call(a,d,c)&&(a.c=d,a.b.set({page:d,title:document.title}),(b||a.a.trackReplaceState)&&a.b.send(\"pageview\",z({transport:\"beacon\"},a.a.fieldsObj,a.b,a.a.hitFilter)))},0)}g.shouldTrackUrlChange=function(a,b){return!(!a||!b)};g.remove=function(){y(history,\"pushState\",this.H);y(history,\"replaceState\",this.I);window.removeEventListener(\"popstate\",this.C)};G(\"urlChangeTracker\",Ya);})();\n","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n",null,null,null,null,null,null,"import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n    const events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n    // Ensures the type matches one of the events specified on the element.\n    if (events.indexOf(event.type) < 0) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element, event));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryParamsWhitelist: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (this.opts.stripQuery ?\n          this.stripNonWhitelistedQueryParams(url.search) : url.search),\n    };\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      const returnValue = {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n      };\n      if (this.queryDimension) {\n        returnValue[this.queryDimension] =\n            userCleanedFieldsObj[this.queryDimension];\n      }\n      return returnValue;\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Accpets a raw URL search string and returns a new search string containing\n   * only the site search params (if they exist).\n   * @param {string} searchString The URL search string (starting with '?').\n   * @return {string} The query string\n   */\n  stripNonWhitelistedQueryParams(searchString) {\n    if (Array.isArray(this.opts.queryParamsWhitelist)) {\n      const foundParams = [];\n      searchString.slice(1).split('&').forEach((kv) => {\n        const [key, value] = kv.split('=');\n        if (this.opts.queryParamsWhitelist.indexOf(key) > -1 && value) {\n          foundParams.push([key, value]);\n        }\n      });\n\n      return foundParams.length ?\n          '?' + foundParams.map((kv) => kv.join('=')).join('&') : '';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        domReady, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `impressionTracker` analytics.js plugin.\n * @implements {ImpressionTrackerPublicInterface}\n */\nclass ImpressionTracker {\n  /**\n   * Registers impression tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?ImpressionTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.IMPRESSION_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n    /** type {ImpressionTrackerOpts} */\n    const defaultOptions = {\n      // elements: undefined,\n      rootMargin: '0px',\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** type {ImpressionTrackerOpts} */ (\n        assign(defaultOptions, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleDomMutations = this.handleDomMutations.bind(this);\n    this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n    this.handleDomElementAdded = this.handleDomElementAdded.bind(this);\n    this.handleDomElementRemoved = this.handleDomElementRemoved.bind(this);\n\n    /** @type {MutationObserver} */\n    this.mutationObserver = null;\n\n    // The primary list of elements to observe. Each item contains the\n    // element ID, threshold, and whether it's currently in-view.\n    this.items = [];\n\n    // A map of element IDs in the `items` array to DOM elements in the\n    // document. The presence of a key indicates that the element ID is in the\n    // `items` array, and the presence of an element value indicates that the\n    // element is in the DOM.\n    this.elementMap = {};\n\n    // A map of threshold values. Each threshold is mapped to an\n    // IntersectionObserver instance specific to that threshold.\n    this.thresholdMap = {};\n\n    // Once the DOM is ready, start observing for changes (if present).\n    domReady(() => {\n      if (this.opts.elements) {\n        this.observeElements(this.opts.elements);\n      }\n    });\n  }\n\n  /**\n   * Starts observing the passed elements for impressions.\n   * @param {Array<!ImpressionTrackerElementsItem|string>} elements\n   */\n  observeElements(elements) {\n    const data = this.deriveDataFromElements(elements);\n\n    // Merge the new data with the data already on the plugin instance.\n    this.items = this.items.concat(data.items);\n    this.elementMap = assign({}, data.elementMap, this.elementMap);\n    this.thresholdMap = assign({}, data.thresholdMap, this.thresholdMap);\n\n    // Observe each new item.\n    data.items.forEach((item) => {\n      const observer = this.thresholdMap[item.threshold] =\n          (this.thresholdMap[item.threshold] || new IntersectionObserver(\n              this.handleIntersectionChanges, {\n                rootMargin: this.opts.rootMargin,\n                threshold: [+item.threshold],\n              }));\n\n      const element = this.elementMap[item.id] ||\n          (this.elementMap[item.id] = document.getElementById(item.id));\n\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    if (!this.mutationObserver) {\n      this.mutationObserver = new MutationObserver(this.handleDomMutations);\n      this.mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    // TODO(philipwalton): Remove temporary hack to force a new frame\n    // immediately after adding observers.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n    requestAnimationFrame(() => {});\n  }\n\n  /**\n   * Stops observing the passed elements for impressions.\n   * @param {Array<!ImpressionTrackerElementsItem|string>} elements\n   * @return {undefined}\n   */\n  unobserveElements(elements) {\n    const itemsToKeep = [];\n    const itemsToRemove = [];\n\n    this.items.forEach((item) => {\n      const itemInItems = elements.some((element) => {\n        const itemToRemove = getItemFromElement(element);\n        return itemToRemove.id === item.id &&\n            itemToRemove.threshold === item.threshold &&\n            itemToRemove.trackFirstImpressionOnly ===\n                item.trackFirstImpressionOnly;\n      });\n      if (itemInItems) {\n        itemsToRemove.push(item);\n      } else {\n        itemsToKeep.push(item);\n      }\n    });\n\n    // If there are no items to keep, run the `unobserveAllElements` logic.\n    if (!itemsToKeep.length) {\n      this.unobserveAllElements();\n    } else {\n      const dataToKeep = this.deriveDataFromElements(itemsToKeep);\n      const dataToRemove = this.deriveDataFromElements(itemsToRemove);\n\n      this.items = dataToKeep.items;\n      this.elementMap = dataToKeep.elementMap;\n      this.thresholdMap = dataToKeep.thresholdMap;\n\n      // Unobserve removed elements.\n      itemsToRemove.forEach((item) => {\n        if (!dataToKeep.elementMap[item.id]) {\n          const observer = dataToRemove.thresholdMap[item.threshold];\n          const element = dataToRemove.elementMap[item.id];\n\n          if (element) {\n            observer.unobserve(element);\n          }\n\n          // Disconnect unneeded threshold observers.\n          if (!dataToKeep.thresholdMap[item.threshold]) {\n            dataToRemove.thresholdMap[item.threshold].disconnect();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stops observing all currently observed elements.\n   */\n  unobserveAllElements() {\n    Object.keys(this.thresholdMap).forEach((key) => {\n      this.thresholdMap[key].disconnect();\n    });\n\n    this.mutationObserver.disconnect();\n    this.mutationObserver = null;\n\n    this.items = [];\n    this.elementMap = {};\n    this.thresholdMap = {};\n  }\n\n  /**\n   * Loops through each of the passed elements and creates a map of element IDs,\n   * threshold values, and a list of \"items\" (which contains each element's\n   * `threshold` and `trackFirstImpressionOnly` property).\n   * @param {Array} elements A list of elements to derive item data from.\n   * @return {Object} An object with the properties `items`, `elementMap`\n   *     and `threshold`.\n   */\n  deriveDataFromElements(elements) {\n    const items = [];\n    const thresholdMap = {};\n    const elementMap = {};\n\n    if (elements.length) {\n      elements.forEach((element) => {\n        const item = getItemFromElement(element);\n\n        items.push(item);\n        elementMap[item.id] = this.elementMap[item.id] || null;\n        thresholdMap[item.threshold] =\n            this.thresholdMap[item.threshold] || null;\n      });\n    }\n\n    return {items, elementMap, thresholdMap};\n  }\n\n  /**\n   * Handles nodes being added or removed from the DOM. This function is passed\n   * as the callback to `this.mutationObserver`.\n   * @param {Array} mutations A list of `MutationRecord` instances\n   */\n  handleDomMutations(mutations) {\n    for (let i = 0, mutation; mutation = mutations[i]; i++) {\n      // Handles removed elements.\n      for (let k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n        this.walkNodeTree(removedEl, this.handleDomElementRemoved);\n      }\n      // Handles added elements.\n      for (let j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n        this.walkNodeTree(addedEl, this.handleDomElementAdded);\n      }\n    }\n  }\n\n  /**\n   * Iterates through all descendents of a DOM node and invokes the passed\n   * callback if any of them match an elememt in `elementMap`.\n   * @param {Node} node The DOM node to walk.\n   * @param {Function} callback A function to be invoked if a match is found.\n   */\n  walkNodeTree(node, callback) {\n    if (node.nodeType == 1 && node.id in this.elementMap) {\n      callback(node.id);\n    }\n    for (let i = 0, child; child = node.childNodes[i]; i++) {\n      this.walkNodeTree(child, callback);\n    }\n  }\n\n  /**\n   * Handles intersection changes. This function is passed as the callback to\n   * `this.intersectionObserver`\n   * @param {Array} records A list of `IntersectionObserverEntry` records.\n   */\n  handleIntersectionChanges(records) {\n    const itemsToRemove = [];\n    for (let i = 0, record; record = records[i]; i++) {\n      for (let j = 0, item; item = this.items[j]; j++) {\n        if (record.target.id !== item.id) continue;\n\n        if (isTargetVisible(item.threshold, record)) {\n          this.handleImpression(item.id);\n\n          if (item.trackFirstImpressionOnly) {\n            itemsToRemove.push(item);\n          }\n        }\n      }\n    }\n    if (itemsToRemove.length) {\n      this.unobserveElements(itemsToRemove);\n    }\n  }\n\n  /**\n   * Sends a hit to Google Analytics with the impression data.\n   * @param {string} id The ID of the element making the impression.\n   */\n  handleImpression(id) {\n    const element = document.getElementById(id);\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Viewport',\n      eventAction: 'impression',\n      eventLabel: id,\n      nonInteraction: true,\n    };\n\n    /** @type {FieldsObj} */\n    const userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(element, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element));\n  }\n\n  /**\n   * Handles an element in the items array being added to the DOM.\n   * @param {string} id The ID of the element that was added.\n   */\n  handleDomElementAdded(id) {\n    const element = this.elementMap[id] = document.getElementById(id);\n    this.items.forEach((item) => {\n      if (id == item.id) {\n        this.thresholdMap[item.threshold].observe(element);\n      }\n    });\n  }\n\n  /**\n   * Handles an element currently being observed for intersections being\n   * removed from the DOM.\n   * @param {string} id The ID of the element that was removed.\n   */\n  handleDomElementRemoved(id) {\n    const element = this.elementMap[id];\n    this.items.forEach((item) => {\n      if (id == item.id) {\n        this.thresholdMap[item.threshold].unobserve(element);\n      }\n    });\n\n    this.elementMap[id] = null;\n  }\n\n  /**\n   * Removes all listeners and observers.\n   * @private\n   */\n  remove() {\n    this.unobserveAllElements();\n  }\n}\n\n\nprovide('impressionTracker', ImpressionTracker);\n\n\n/**\n * Detects whether or not an intersection record represents a visible target\n * given a particular threshold.\n * @param {number} threshold The threshold the target is visible above.\n * @param {IntersectionObserverEntry} record The most recent record entry.\n * @return {boolean} True if the target is visible.\n */\nfunction isTargetVisible(threshold, record) {\n  if (threshold === 0) {\n    const i = record.intersectionRect;\n    return i.top > 0 || i.bottom > 0 || i.left > 0 || i.right > 0;\n  } else {\n    return record.intersectionRatio >= threshold;\n  }\n}\n\n\n/**\n * Creates an item by merging the passed element with the item defaults.\n * If the passed element is just a string, that string is treated as\n * the item ID.\n * @param {!ImpressionTrackerElementsItem|string} element The element to\n *     convert to an item.\n * @return {!ImpressionTrackerElementsItem} The item object.\n */\nfunction getItemFromElement(element) {\n  /** @type {ImpressionTrackerElementsItem} */\n  const defaultOpts = {\n    threshold: 0,\n    trackFirstImpressionOnly: true,\n  };\n\n  if (typeof element == 'string') {\n    element = /** @type {!ImpressionTrackerElementsItem} */ ({id: element});\n  }\n\n  return assign(defaultOpts, element);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/** @type {boolean|undefined} */\nlet browserSupportsLocalStorage;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * Returns true if the browser supports and can successfully write to\n   * localStorage. The results is cached so this method can be invoked many\n   * times with no extra performance cost.\n   * @private\n   * @return {boolean}\n   */\n  static isSupported_() {\n    if (browserSupportsLocalStorage != null) {\n      return browserSupportsLocalStorage;\n    }\n\n    try {\n      window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n      window.localStorage.removeItem(AUTOTRACK_PREFIX);\n      browserSupportsLocalStorage = true;\n    } catch (err) {\n      browserSupportsLocalStorage = false;\n    }\n    return browserSupportsLocalStorage;\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @return {string|null} The stored value.\n   */\n  static get_(key) {\n    return window.localStorage.getItem(key);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @param {string} value The value to store.\n   */\n  static set_(key, value) {\n    window.localStorage.setItem(key, value);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   */\n  static clear_(key) {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults = {}) {\n    super();\n    this.key_ = key;\n    this.defaults_ = defaults;\n\n    /** @type {?Object} */\n    this.cache_ = null; // Will be set after the first get.\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    if (this.cache_) {\n      return this.cache_;\n    } else {\n      if (Store.isSupported_()) {\n        try {\n          this.cache_ = parse(Store.get_(this.key_));\n        } catch(err) {\n          // Do nothing.\n        }\n      }\n      return this.cache_ = assign({}, this.defaults_, this.cache_);\n    }\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    this.cache_ = assign({}, this.defaults_, this.cache_, newData);\n\n    if (Store.isSupported_()) {\n      try {\n        Store.set_(this.key_, JSON.stringify(this.cache_));\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    this.cache_ = {};\n    if (Store.isSupported_()) {\n      try {\n        Store.clear_(this.key_);\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key_];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = assign({}, store.defaults_, parse(event.oldValue));\n    const newData = assign({}, store.defaults_, parse(event.newValue));\n\n    store.cache_ = newData;\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  let data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */ (JSON.parse(source));\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n",null,"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now, uuid} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n\n    // Ensure the session has an ID.\n    if (!this.store.get().id) {\n      this.store.set(/** @type {SessionStoreData} */ ({id: uuid()}));\n    }\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n  getId() {\n    return this.store.get().id;\n  }\n\n  /**\n   * Accepts a session ID and returns true if the specified session has\n   * evidentially expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {string} id The ID of a session to check for expiry.\n   * @return {boolean} True if the session has not exp\n   */\n  isExpired(id = this.getId()) {\n    // If a session ID is passed and it doesn't match the current ID,\n    // assume it's from an expired session. If no ID is passed, assume the ID\n    // of the current session.\n    if (id != this.getId()) return true;\n\n    /** @type {SessionStoreData} */\n    const sessionData = this.store.get();\n\n    // `isExpired` will be `true` if the sessionControl field was set to\n    // 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const oldHitTime = sessionData.hitTime;\n\n    // Only consider a session expired if previous hit time data exists, and\n    // the previous hit time is greater than that session timeout period or\n    // the hits occurred on different days in the session timezone.\n    if (oldHitTime) {\n      const currentDate = new Date();\n      const oldHitDate = new Date(oldHitTime);\n      if (currentDate - oldHitDate > (this.timeout * MINUTES) ||\n          this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are definitively not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionControl = model.get('sessionControl');\n      const sessionWillStart = sessionControl == 'start' || this.isExpired();\n      const sessionWillEnd = sessionControl == 'end';\n\n      /** @type {SessionStoreData} */\n      const sessionData = this.store.get();\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n        sessionData.id = uuid();\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    };\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, debounce, isObject} from '../utilities';\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\nclass MaxScrollTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    const defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = debounce(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n  listenForMaxScrollChanges() {\n    const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n    if (maxScrollPercentage < 100) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n\n  /**\n   * Removes an added scroll listener.\n   */\n  stopListeningForMaxScrollChanges() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n\n  /**\n   * Handles the scroll event. If the current scroll percentage is greater\n   * that the stored scroll event by at least the specified increase threshold,\n   * send an event with the increase amount.\n   */\n  handleScroll() {\n    const pageHeight = getPageHeight();\n    const scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n    const windowHeight = window.innerHeight;\n\n    // Ensure scrollPercentage is an integer between 0 and 100.\n    const scrollPercentage = Math.min(100, Math.max(0,\n        Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n    // If the max scroll data gets out of the sync with the session data\n    // (for whatever reason), clear it.\n    const sessionId = this.session.getId();\n    if (sessionId != this.store.get().sessionId) {\n      this.store.clear();\n      this.store.set({sessionId});\n    }\n\n    // If the session has expired, clear the stored data and don't send any\n    // events (since they'd start a new session). Note: this check is needed,\n    // in addition to the above check, to handle cases where the session IDs\n    // got out of sync, but the session didn't expire.\n    if (this.session.isExpired(this.store.get().sessionId)) {\n      this.store.clear();\n    } else {\n      const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n      if (scrollPercentage > maxScrollPercentage) {\n        if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n          this.stopListeningForMaxScrollChanges();\n        }\n        const increaseAmount = scrollPercentage - maxScrollPercentage;\n        if (scrollPercentage == 100 ||\n            increaseAmount >= this.opts.increaseThreshold) {\n          this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n          this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n        }\n      }\n    }\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      originalMethod(field, value);\n\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page) {\n        const lastPagePath = this.pagePath;\n        this.pagePath = this.getPagePath();\n\n        if (this.pagePath != lastPagePath) {\n          // Since event listeners for the same function are never added twice,\n          // we don't need to worry about whether we're already listening. We\n          // can just add the event listener again.\n          this.listenForMaxScrollChanges();\n        }\n      }\n    };\n  }\n\n  /**\n   * Sends an event for the increased max scroll percentage amount.\n   * @param {number} increaseAmount\n   * @param {number} scrollPercentage\n   */\n  sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Max Scroll',\n      eventAction: 'increase',\n      eventValue: increaseAmount,\n      eventLabel: String(scrollPercentage),\n      nonInteraction: true,\n    };\n\n    // If a custom metric was specified, set it equal to the event value.\n    if (this.opts.maxScrollMetricIndex) {\n      defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Stores the current max scroll percentage for the current page.\n   * @param {number} maxScrollPercentage\n   */\n  setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n    this.store.set({\n      [this.pagePath]: maxScrollPercentage,\n      sessionId: this.session.getId(),\n    });\n  }\n\n  /**\n   * Gets the stored max scroll percentage for the current page.\n   * @return {number}\n   */\n  getMaxScrollPercentageForCurrentPage() {\n    return this.store.get()[this.pagePath] || 0;\n  }\n\n  /**\n   * Gets the page path from the tracker object.\n   * @return {number}\n   */\n  getPagePath() {\n    const url = parseUrl(\n        this.tracker.get('page') || this.tracker.get('location'));\n    return url.pathname + url.search;\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    this.stopListeningForMaxScrollChanges();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n  }\n}\n\n\nprovide('maxScrollTracker', MaxScrollTracker);\n\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  const html = document.documentElement;\n  const body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight,\n      body.offsetHeight, body.scrollHeight);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        debounce, isObject, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n      };\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundFormTracker` analytics.js plugin.\n * @implements {OutboundFormTrackerPublicInterface}\n */\nclass OutboundFormTracker {\n  /**\n   * Registers outbound form tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_FORM_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundFormTrackerOpts} */\n    const defaultOpts = {\n      formSelector: 'form',\n      shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {OutboundFormTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    this.delegate = delegate(document, 'submit', this.opts.formSelector,\n        this.handleFormSubmits.bind(this), {composed: true, useCapture: true});\n  }\n\n  /**\n   * Handles all submits on form elements. A form submit is considered outbound\n   * if its action attribute starts with http and does not contain\n   * location.hostname.\n   * When the beacon transport method is not available, the event's default\n   * action is prevented and re-emitted after the hit is sent.\n   * @param {Event} event The DOM submit event.\n   * @param {Element} form The delegated event target.\n   */\n  handleFormSubmits(event, form) {\n    const action = parseUrl(form.action).href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Form',\n      eventAction: 'submit',\n      eventLabel: action,\n    };\n\n    if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n      if (!navigator.sendBeacon) {\n        // Stops the submit and waits until the hit is complete (with timeout)\n        // for browsers that don't support beacon.\n        event.preventDefault();\n        defaultFields.hitCallback = withTimeout(function() {\n          form.submit();\n        });\n      }\n\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(form, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(\n          defaultFields, userFields,\n              this.tracker, this.opts.hitFilter, form, event));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a form is\n   * submitted. By default, forms with an action attribute that starts with\n   * \"http\" and doesn't contain the current hostname are tracked.\n   * @param {Element} form The form that was submitted.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the form should be tracked.\n   */\n  shouldTrackOutboundForm(form, parseUrlFn) {\n    const url = parseUrlFn(form.action);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.delegate.destroy();\n  }\n}\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      const fieldsObj = createFieldsObj(defaultFields, userFields,\n          this.tracker, this.opts.hitFilter, link, event);\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        const clickHandler = () => {\n          window.removeEventListener('click', clickHandler);\n\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n\n            const oldHitCallback = fieldsObj.hitCallback;\n            fieldsObj.hitCallback = withTimeout(function() {\n              if (typeof oldHitCallback == 'function') oldHitCallback();\n              location.href = href;\n            });\n          }\n          this.tracker.send('event', fieldsObj);\n        };\n        window.addEventListener('click', clickHandler);\n      } else {\n        this.tracker.send('event', fieldsObj);\n      }\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, deferUntilPluginsLoaded,\n    isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!document.visibilityState) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      visibleThreshold: 5 * SECONDS,\n      // timeZone: undefined,\n      sendInitialPageview: false,\n      // pageLoadsMetricIndex: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.lastPageState = document.visibilityState;\n    this.visibleThresholdTimeout_ = null;\n    this.isInitialPageviewSent_ = false;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    window.addEventListener('unload', this.handleWindowUnload);\n    document.addEventListener('visibilitychange', this.handleChange);\n\n    // Postpone sending any hits until the next call stack, which allows all\n    // autotrack plugins to be required sync before any hits are sent.\n    deferUntilPluginsLoaded(this.tracker, () => {\n      if (document.visibilityState == VISIBLE) {\n        if (this.opts.sendInitialPageview) {\n          this.sendPageview({isPageLoad: true});\n          this.isInitialPageviewSent_ = true;\n        }\n        this.store.set(/** @type {PageVisibilityStoreData} */ ({\n          time: now(),\n          state: VISIBLE,\n          pageId: PAGE_ID,\n          sessionId: this.session.getId(),\n        }));\n      } else {\n        if (this.opts.sendInitialPageview && this.opts.pageLoadsMetricIndex) {\n          this.sendPageLoad();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    if (!(document.visibilityState == VISIBLE ||\n        document.visibilityState == HIDDEN)) {\n      return;\n    }\n\n    const lastStoredChange = this.getAndValidateChangeData();\n\n    /** @type {PageVisibilityStoreData} */\n    const change = {\n      time: now(),\n      state: document.visibilityState,\n      pageId: PAGE_ID,\n      sessionId: this.session.getId(),\n    };\n\n    // If the visibilityState has changed to visible and the initial pageview\n    // has not been sent (and the `sendInitialPageview` option is `true`).\n    // Send the initial pageview now.\n    if (document.visibilityState == VISIBLE &&\n        this.opts.sendInitialPageview && !this.isInitialPageviewSent_) {\n      this.sendPageview();\n      this.isInitialPageviewSent_ = true;\n    }\n\n    // If the visibilityState has changed to hidden, clear any scheduled\n    // pageviews waiting for the visibleThreshold timeout.\n    if (document.visibilityState == HIDDEN && this.visibleThresholdTimeout_) {\n      clearTimeout(this.visibleThresholdTimeout_);\n    }\n\n    if (this.session.isExpired(lastStoredChange.sessionId)) {\n      this.store.clear();\n      if (this.lastPageState == HIDDEN &&\n          document.visibilityState == VISIBLE) {\n        // If the session has expired, changes from hidden to visible should\n        // be considered a new pageview rather than a visibility event.\n        // This behavior ensures all sessions contain a pageview so\n        // session-level page dimensions and metrics (e.g. ga:landingPagePath\n        // and ga:entrances) are correct.\n        // Also, in order to prevent false positives, we add a small timeout\n        // that is cleared if the visibilityState changes to hidden shortly\n        // after the change to visible. This can happen if a user is quickly\n        // switching through their open tabs but not actually interacting with\n        // and of them. It can also happen when a user goes to a tab just to\n        // immediately close it. Such cases should not be considered pageviews.\n        clearTimeout(this.visibleThresholdTimeout_);\n        this.visibleThresholdTimeout_ = setTimeout(() => {\n          this.store.set(change);\n          this.sendPageview({hitTime: change.time});\n        }, this.opts.visibleThreshold);\n      }\n    } else {\n      if (lastStoredChange.pageId == PAGE_ID &&\n          lastStoredChange.state == VISIBLE) {\n        this.sendPageVisibilityEvent(lastStoredChange);\n      }\n      this.store.set(change);\n    }\n\n    this.lastPageState = document.visibilityState;\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @return {!PageVisibilityStoreData}\n   */\n  getAndValidateChangeData() {\n    const lastStoredChange =\n        /** @type {PageVisibilityStoreData} */ (this.store.get());\n\n    if (this.lastPageState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.set(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event to track the time this page was in the\n   * visible state (assuming it was in that state long enough to meet the\n   * threshold).\n   * @param {!PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     - hitTime: A hit timestap used to help ensure original order in cases\n   *                where the send is delayed.\n   */\n  sendPageVisibilityEvent(lastStoredChange, {hitTime} = {}) {\n    const delta = this.getTimeSinceLastStoredChange(\n        lastStoredChange, {hitTime});\n\n    // If the detla is greater than the visibileThreshold, report it.\n    if (delta && delta >= this.opts.visibleThreshold) {\n      const deltaInSeconds = Math.round(delta / SECONDS);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        nonInteraction: true,\n        eventCategory: 'Page Visibility',\n        eventAction: 'track',\n        eventValue: deltaInSeconds,\n        eventLabel: NULL_DIMENSION,\n      };\n\n      if (hitTime) {\n        defaultFields.queueTime = now() - hitTime;\n      }\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.visibleMetricIndex) {\n        defaultFields['metric' + this.opts.visibleMetricIndex] = deltaInSeconds;\n      }\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Sends a page load event.\n   */\n  sendPageLoad() {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'page load',\n      eventLabel: NULL_DIMENSION,\n      ['metric' + this.opts.pageLoadsMetricIndex]: 1,\n      nonInteraction: true,\n    };\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Sends a pageview, optionally calculating an offset if hitTime is passed.\n   * @param {{\n   *   hitTime: (number|undefined),\n   *   isPageLoad: (boolean|undefined)\n   * }=} param1\n   *     hitTime: The timestamp of the current hit.\n   *     isPageLoad: True if this pageview was also a page load.\n   */\n  sendPageview({hitTime, isPageLoad} = {}) {\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    if (hitTime) {\n      defaultFields.queueTime = now() - hitTime;\n    }\n    if (isPageLoad && this.opts.pageLoadsMetricIndex) {\n      defaultFields['metric' + this.opts.pageLoadsMetricIndex] = 1;\n    }\n\n    this.tracker.send('pageview',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(field, value);\n    };\n  }\n\n  /**\n   * Calculates the time since the last visibility change event in the current\n   * session. If the session has expired the reported time is zero.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     hitTime: The time of the current hit (defaults to now).\n   * @return {number} The time (in ms) since the last change.\n   */\n  getTimeSinceLastStoredChange(lastStoredChange, {hitTime} = {}) {\n    return lastStoredChange.time ?\n        (hitTime || now()) - lastStoredChange.time : 0;\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {PageVisibilityStoreData} newData\n   * @param {PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE &&\n        !this.session.isExpired(oldData.sessionId)) {\n      this.sendPageVisibilityEvent(oldData, {hitTime: newData.time});\n    }\n  }\n\n  /**\n   * Handles responding to the `unload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the `unload`\n   * event to ensure the correct state is always stored.\n   */\n  handleWindowUnload() {\n    // If the stored visibility state isn't hidden when the unload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.store.destroy();\n    this.session.destroy();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    window.removeEventListener('unload', this.handleWindowUnload);\n    document.removeEventListener('visibilitychange', this.handleChange);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\nclass SocialWidgetTracker {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    const defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n  addWidgetListeners() {\n    if (window.FB) this.addFacebookEventHandlers();\n    if (window.twttr) this.addTwitterEventHandlers();\n  }\n\n  /**\n   * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons. Note: this does not capture tweet or\n   * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n   */\n  addTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.bind('tweet', this.handleTweetEvents);\n        window.twttr.events.bind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons.\n   */\n  removeTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.unbind('tweet', this.handleTweetEvents);\n        window.twttr.events.unbind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  addFacebookEventHandlers() {\n    try {\n      window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  removeFacebookEventHandlers() {\n    try {\n      window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Handles `tweet` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleTweetEvents(event) {\n    // Ignores tweets from widgets that aren't the tweet button.\n    if (event.region != 'tweet') return;\n\n    const url = event.data.url || event.target.getAttribute('data-url') ||\n        location.href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'tweet',\n      socialTarget: url,\n    };\n    this.tracker.send('social',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter, event.target, event));\n  }\n\n  /**\n   * Handles `follow` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleFollowEvents(event) {\n    // Ignore follows from widgets that aren't the follow button.\n    if (event.region != 'follow') return;\n\n    const screenName = event.data.screen_name ||\n        event.target.getAttribute('data-screen-name');\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'follow',\n      socialTarget: screenName,\n    };\n    this.tracker.send('social',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter, event.target, event));\n  }\n\n  /**\n   * Handles `like` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the like event.\n   */\n  handleLikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'like',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `unlike` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the unlike event.\n   */\n  handleUnlikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'unlike',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    window.removeEventListener('load', this.addWidgetListeners);\n    this.removeFacebookEventHandlers();\n    this.removeTwitterEventHandlers();\n  }\n}\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `urlChangeTracker` analytics.js plugin.\n * @implements {UrlChangeTrackerPublicInterface}\n */\nclass UrlChangeTracker {\n  /**\n   * Adds handler for the history API methods\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.URL_CHANGE_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!history.pushState || !window.addEventListener) return;\n\n    /** @type {UrlChangeTrackerOpts} */\n    const defaultOpts = {\n      shouldTrackUrlChange: this.shouldTrackUrlChange,\n      trackReplaceState: false,\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {UrlChangeTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Sets the initial page field.\n    // Don't set this on the tracker yet so campaign data can be retreived\n    // from the location field.\n    this.path = getPath();\n\n    // Binds methods.\n    this.pushStateOverride = this.pushStateOverride.bind(this);\n    this.replaceStateOverride = this.replaceStateOverride.bind(this);\n    this.handlePopState = this.handlePopState.bind(this);\n\n    // Watches for history changes.\n    MethodChain.add(history, 'pushState', this.pushStateOverride);\n    MethodChain.add(history, 'replaceState', this.replaceStateOverride);\n    window.addEventListener('popstate', this.handlePopState);\n  }\n\n  /**\n   * Handles invocations of the native `history.pushState` and calls\n   * `handleUrlChange()` indicating that the history updated.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  pushStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(true);\n    };\n  }\n\n  /**\n   * Handles invocations of the native `history.replaceState` and calls\n   * `handleUrlChange()` indicating that history was replaced.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  replaceStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(false);\n    };\n  }\n\n  /**\n   * Handles responding to the popstate event and calls\n   * `handleUrlChange()` indicating that history was updated.\n   */\n  handlePopState() {\n    this.handleUrlChange(true);\n  }\n\n  /**\n   * Updates the page and title fields on the tracker and sends a pageview\n   * if a new history entry was created.\n   * @param {boolean} historyDidUpdate True if the history was changed via\n   *     `pushState()` or the `popstate` event. False if the history was just\n   *     modified via `replaceState()`.\n   */\n  handleUrlChange(historyDidUpdate) {\n    // Calls the update logic asychronously to help ensure that app logic\n    // responding to the URL change happens prior to this.\n    setTimeout(() => {\n      const oldPath = this.path;\n      const newPath = getPath();\n\n      if (oldPath != newPath &&\n          this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n        this.path = newPath;\n        this.tracker.set({\n          page: newPath,\n          title: document.title,\n        });\n\n        if (historyDidUpdate || this.opts.trackReplaceState) {\n          /** @type {FieldsObj} */\n          const defaultFields = {transport: 'beacon'};\n          this.tracker.send('pageview', createFieldsObj(defaultFields,\n              this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit with the new page\n   * data. This default implementation can be overrided in the config options.\n   * @param {string} newPath The path after the URL change.\n   * @param {string} oldPath The path prior to the URL change.\n   * @return {boolean} Whether or not the URL change should be tracked.\n   */\n  shouldTrackUrlChange(newPath, oldPath) {\n    return !!(newPath && oldPath);\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    MethodChain.remove(history, 'pushState', this.pushStateOverride);\n    MethodChain.remove(history, 'replaceState', this.replaceStateOverride);\n    window.removeEventListener('popstate', this.handlePopState);\n  }\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n","/* eslint-disable-next-line no-use-before-define */\nconst saviomd = saviomd || {};\n\nsaviomd.header = (() => {\n  document.querySelector(\"#btn-nav\").addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    document.querySelector(\"#header-nav\").classList.toggle(\"active\");\n  });\n\n  document.querySelectorAll(\".header__nav-link\").forEach((navLink) => {\n    navLink.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      document.querySelector(e.target.hash).scrollIntoView();\n    });\n  });\n})();\n"]}